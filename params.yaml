dataset:
  cifar10:
    train_batch_size: 2
    val_batch_size: 2
    test_batch_size: 2
    train_transforms: ${transforms.train}
    test_transforms: ${transforms.val}
    train_augm: null
    test_augm: null
    val_size: 0.2
    download: False 
    random_state: 42
    num_workers: 0

transforms:
  train: 
    _target_: src.collections.augmentations.torch_transforms.get_train_transforms
  val: 
    _target_: src.collections.augmentations.torch_transforms.get_val_transforms

criterion:
  criterion:
    _target_: torch.nn.CrossEntropyLoss
   # _partial_: True
model:
  model_type: torch_models
  net:
    _target_: torchvision.models.resnet18
    _partial_: True
  weights: None
  num_classes: 10

optimizer:
  optimizer:
    _target_: torch.optim.Adam
    _partial_: True
    lr: 0.001
scheduler:
  scheduler:
    _target_: torch.optim.lr_scheduler.ExponentialLR
    _partial_: True
    gamma: 0.95
    #min_lr: 1e-6
    verbose: False
dataloaders:
  train_dataloader_kwargs:
    batch_size: 5
    num_workers: 32
  val_dataloader_kwargs:
    batch_size: 5
    num_workers: 32

metrics:
  accuracy_score:
    _target_: sklearn.metrics.accuracy_score
    _partial_: True
  recall_score:
    _target_: sklearn.metrics.recall_score
    _partial_: True
    average: weighted
  precision_score:
    _target_: sklearn.metrics.precision_score
    _partial_: True
    average: weighted

trainer:
  trainer_kwargs:
    accelerator: cpu
    devices: 1
    min_epochs: 300
    max_epochs: 400
    check_val_every_n_epoch: 1
    enable_model_summary: True
#     logger: ${logger.mlflow_logger}
# logger:
#   mlflow_logger:
#     _target_: pytorch_lightning.loggers.MLFlowLogger
#     experiment_name: mlflow_check
#     tracking_uri: ./ml-runs